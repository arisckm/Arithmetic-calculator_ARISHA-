import streamlit as st

# --- Page Setup ---
st.set_page_config(page_title="âœ¨ Arthimetic Calculator", page_icon="ðŸ§®")

# --- Session Setup ---
if "expression" not in st.session_state:
    st.session_state.expression = ""

# --- Theme Toggle ---
dark = st.toggle("ðŸŒ™ Dark Mode", value=True)
bg = "#111" if dark else "#fff"
text_color = "#0f0" if dark else "#000"
btn_color = "#222" if dark else "#eee"
op_color = "#ff69b4"
btn_text = "#fff" if dark else "#000"

# --- Title ---
st.markdown("<h1 style='text-align:center;'>ðŸ§® Aesthetic Calculator ðŸ‘‘</h1>", unsafe_allow_html=True)

# --- CSS for animations ---
st.markdown(f"""
    <style>
    .calc-button {{
        background-color: {btn_color};
        color: {btn_text};
        border-radius: 12px;
        padding: 20px;
        font-size: 24px;
        text-align: center;
        transition: transform 0.1s ease-in-out;
        border: none;
        cursor: pointer;
    }}
    .calc-button:hover {{
        transform: scale(1.08);
        background-color: #00bcd4;
        color: white;
    }}
    </style>
""", unsafe_allow_html=True)

# --- Expression Display ---
st.markdown(f"""
<div style='
    background-color: {bg};
    color: {text_color};
    font-size: 32px;
    padding: 15px;
    border-radius: 10px;
    text-align: right;
    border: 2px solid #888;
    margin-bottom: 10px;
'>
    {st.session_state.expression if st.session_state.expression else "0"}
</div>
""", unsafe_allow_html=True)

# --- Click Handler ---
def button_click(label):
    if label == "âœ…":
        try:
            st.session_state.expression = str(eval(
                st.session_state.expression.replace("âœ–", "*").replace("âž—", "/")
            ))
        except:
            st.session_state.expression = "Error"
    elif label == "ðŸ§¹":
        st.session_state.expression = ""
    else:
        st.session_state.expression += label.strip()

# --- Button Layout with Emojis ---
buttons = [
    ["7", "8", "9", "âž—"],
    ["4", "5", "6", "âœ–"],
    ["1", "2", "3", "âž–"],
    ["ðŸ§¹", "0", "âœ…", "âž•"]
]

for row in buttons:
    cols = st.columns(len(row))
    for i, label in enumerate(row):
        if cols[i].button(f"{label}", key=f"{label}_{i}"):
            button_click(label)
            st.rerun()

# --- Optional Manual Input ---
with st.form("manual_input"):
    expr = st.text_input("Or type an expression:", value=st.session_state.expression)
    submit = st.form_submit_button("Calculate")
    if submit:
        try:
            st.session_state.expression = str(eval(expr.replace("âœ–", "*").replace("âž—", "/")))
        except:
            st.session_state.expression = "Error"
        st.rerun()
